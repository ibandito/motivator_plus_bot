import logging
import random
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

API_TOKEN = '7458160287:AAFn3FNZHGr8wQBTV-eKL9YmzeaDi-7Gm8Y'

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞ —Ç–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö —Ü–∏—Ç–∞—Ç –∑ —Ñ–∞–π–ª—É (—ñ–≥–Ω–æ—Ä—É—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ —Ä—è–¥–∫–∏ —Ç–∞ —Ç–µ–≥–∏)
with open("quotes.txt", "r", encoding="utf-8") as file:
    quotes = [line.strip() for line in file if line.strip() and not line.startswith('#')]

# –û–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞
keyboard = InlineKeyboardMarkup().add(
    InlineKeyboardButton("üí™ –ú–æ—Ç–∏–≤—É–π –º–µ–Ω–µ!", callback_data="motivate")
)

# /start ‚Äî –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–æ—é
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! –ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –º–æ—Ç–∏–≤–∞—Ü—ñ—é üëá", reply_markup=keyboard)

# –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏
@dp.callback_query_handler(lambda c: c.data == 'motivate')
async def process_motivation(callback_query: types.CallbackQuery):
    quote = random.choice(quotes)
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, quote)

# –ó–∞–ø—É—Å–∫
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)