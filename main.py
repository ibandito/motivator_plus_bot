from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor
import logging

# –¢–≤—ñ–π Telegram Token (—É–∂–µ –≤—Å—Ç–∞–≤–ª–µ–Ω–æ)
API_TOKEN = "7458160287:AAFn3FNZHGr8wQBTV-eKL9YmzeaDi-7Gm8Y"

# –£–≤—ñ–º–∫–Ω–µ–Ω–Ω—è –ª–æ–≥—ñ–≤
logging.basicConfig(level=logging.INFO)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –°—Ç–∞—Ä—Ç–æ–≤–∞ –∫–æ–º–∞–Ω–¥–∞ /start –∑ –∫–Ω–æ–ø–∫–∞–º–∏
@dp.message_handler(commands=['start'])
async def start_handler(message: types.Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(
        KeyboardButton("üî• –°–∞–º–æ–º–æ—Ç–∏–≤–∞—Ü—ñ—è"),
        KeyboardButton("üéØ –¶—ñ–ª—ñ —Ç–∞ —Ñ–æ–∫—É—Å")
    )
    keyboard.add(
        KeyboardButton("üí™ –°–∏–ª–∞ –≤–æ–ª—ñ"),
        KeyboardButton("üí° –ù–∞—Ç—Ö–Ω–µ–Ω–Ω—è")
    )
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! –û–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –º–æ—Ç–∏–≤–∞—Ü—ñ—ó:", reply_markup=keyboard)

# –û–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å-–∫–Ω–æ–ø–æ–∫
@dp.message_handler(lambda message: message.text == "üî• –°–∞–º–æ–º–æ—Ç–∏–≤–∞—Ü—ñ—è")
async def handle_self_motivation(message: types.Message):
    await message.answer("üî• –¢–∏ ‚Äî –≥–æ–ª–æ–≤–Ω–∞ —Å–∏–ª–∞ —Å–≤–æ–≥–æ —É—Å–ø—ñ—Ö—É. –î—ñ–π!")

@dp.message_handler(lambda message: message.text == "üéØ –¶—ñ–ª—ñ —Ç–∞ —Ñ–æ–∫—É—Å")
async def handle_goals(message: types.Message):
    await message.answer("üéØ –ó–æ—Å–µ—Ä–µ–¥—å—Å—è –Ω–∞ –æ–¥–Ω–æ–º—É, –∞–ª–µ –≤–∞–∂–ª–∏–≤–æ–º—É –∫—Ä–æ—Ü—ñ —Å—å–æ–≥–æ–¥–Ω—ñ.")

@dp.message_handler(lambda message: message.text == "üí™ –°–∏–ª–∞ –≤–æ–ª—ñ")
async def handle_willpower(message: types.Message):
    await message.answer("üí™ –†–æ–±–∏ –Ω–∞–≤—ñ—Ç—å —Ç–æ–¥—ñ, –∫–æ–ª–∏ –Ω–µ —Ö–æ—á–µ—Ç—å—Å—è. –°–∞–º–µ —Ç–æ–¥—ñ –∑‚Äô—è–≤–ª—è—î—Ç—å—Å—è —Å–∏–ª–∞.")

@dp.message_handler(lambda message: message.text == "üí° –ù–∞—Ç—Ö–Ω–µ–Ω–Ω—è")
async def handle_inspiration(message: types.Message):
    await message.answer("üí° –ù–∞—Ç—Ö–Ω–µ–Ω–Ω—è –Ω–µ —á–µ–∫–∞—é—Ç—å ‚Äî –π–æ–≥–æ —Å—Ç–≤–æ—Ä—é—é—Ç—å. –°—Ç–≤–æ—Ä–∏ —Å–≤—ñ–π —à–∞–Ω—Å.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
